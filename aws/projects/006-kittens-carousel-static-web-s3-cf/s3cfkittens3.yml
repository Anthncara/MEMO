AWSTemplateFormatVersion: '2010-09-09'
Description: 'Static website hosting with S3 and CloudFront'

Parameters:
  DNSName:
    Type: AWS::Route53::HostedZone::Id
    Description: The DNS name of an existing Amazon Route 53 hosted zone
  DomainName:
    Type: String
    Default: yurttav.com
    Description: The DNS name of an existing Amazon Route 53 hosted zone  
  BucketName:
    Type: String
    Default: kittens.yurttav.com
    Description: The full domain name for the web application

Resources:
  # Create the bucket to contain the website HTML
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref BucketName
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: 'index.html'

  # Configure the bucket as a CloudFront Origin
  ReadPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: 's3:GetObject'
            Effect: Allow
            Resource: !Sub '${S3Bucket.Arn}/*'
            Principal: '*'
            Sid: PublicReadGetObject

  # Create Certificate
  KittensCertificate:
    Type: "AWS::CertificateManager::Certificate"
    Properties:
      DomainName: !Sub ${BucketName}
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: !Sub ${BucketName}
          HostedZoneId: !Ref DNSName

  # Configure CloudFront
  CloudFrontDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref BucketName
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          TargetOriginId: s3kittens
          ViewerProtocolPolicy: redirect-to-https
        Enabled: true
        DefaultRootObject: index.html
        HttpVersion: http2
        Origins:
          - DomainName: !GetAtt S3Bucket.DomainName
            Id: s3kittens
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !Ref KittensCertificate
          MinimumProtocolVersion: TLSv1.2_2019
          SslSupportMethod: sni-only

  Route53RecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub '${DomainName}.'
      RecordSets:
      - Name: !Ref BucketName
        Type: A
        AliasTarget:
          DNSName: !GetAtt CloudFrontDistribution.DomainName
          EvaluateTargetHealth: false
          HostedZoneId: Z2FDTNDATAQYW2

Outputs:
  BucketName:
    Description: S3 Bucket Name
    Value: !Ref S3Bucket
  BucketAddress:
    Description: S3 Bucket Address
    Value: !GetAtt S3Bucket.DomainName
  BucketUrl:
    Description: S3 Bucket Url
    Value: !GetAtt S3Bucket.WebsiteURL
  DistributionId:
    Description: CloudFront Distribution ID
    Value: !Ref CloudFrontDistribution
  CloudFrontDomain:
    Description: Cloudfront Domain
    Value: !GetAtt CloudFrontDistribution.DomainName